# 数据源 ds0,ds1
sharding.jdbc.datasource.names=dbuser0,dbuser1
# 第一个数据库
sharding.jdbc.datasource.dbuser0.type=com.zaxxer.hikari.HikariDataSource
sharding.jdbc.datasource.dbuser0.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.dbuser0.jdbc-url=jdbc:mysql://127.0.0.1:3306/dbuser0?useUnicode=true&characterEncoding=utf8&characterSetResults=utf8&serverTimezone=GMT%2B8
sharding.jdbc.datasource.dbuser0.username=root
sharding.jdbc.datasource.dbuser0.password=123456

# 第二个数据库
sharding.jdbc.datasource.dbuser1.type=com.zaxxer.hikari.HikariDataSource 
sharding.jdbc.datasource.dbuser1.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.dbuser1.jdbc-url=jdbc:mysql://127.0.0.1:3306/dbuser1?useUnicode=true&characterEncoding=utf8&characterSetResults=utf8&serverTimezone=GMT%2B8
sharding.jdbc.datasource.dbuser1.username=root
sharding.jdbc.datasource.dbuser1.password=123456 

# 水平拆分的数据库（表） 配置分库 + 分表策略 行表达式分片策略
# 分库策略
sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=id
sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=dbuser$->{id % 2}

# 分表策略 其中user为逻辑表 分表主要取决于age行
sharding.jdbc.config.sharding.tables.tb_user.actual-data-nodes=dbuser$->{0..1}.tb_user_$->{0..1}
sharding.jdbc.config.sharding.tables.tb_user.table-strategy.inline.sharding-column=age
# 分片算法表达式
sharding.jdbc.config.sharding.tables.tb_user.table-strategy.inline.algorithm-expression=tb_user_$->{age % 2}

# 主键 UUID 18位数 如果是分布式还要进行一个设置 防止主键重复
sharding.jdbc.config.sharding.tables.tb_user.key-generator-column-name=id

# 打印执行的数据库以及语句
sharding.jdbc.config.props..sql.show=true
spring.main.allow-bean-definition-overriding=true